
@model Domain.IndexViewModel
@{
    var imagepath = Server.MapPath("CategoryImageUploadfiles");
}

<div class="product-wrapper-grid product">
    
    <div class="row">
        @if (Model.Categories.Count() > 0)
        {
            foreach (var item in Model.Categories)
            {

                <div class="col-xl-3 col-md-4 col-6  col-grid-box">
                    <div class="product-box">
                        <div class="product-imgbox">
                            <a href="@Url.Action("Index","Product",new {catId=@item.GRP_CD }) ">
                                @if (item.ImageName == "")
                                {
                                    <div class="product-front">
                                        <img src="~/Assets/Images/ProductImage/1.jpg" class="img-fluid  " alt="product">
                                    </div>
                                }
                                else
                                {
                                    <div class="product-front">
                                        <img src="~/Assets/Images/CategoryImageUploadfiles/@item.ImageName" class="img-fluid  " alt="product">
                                    </div>
                                }
                            </a>
                        </div>
                        <div class="">
                            <div class="detail-title">
                                <div class="detail-left" style="padding-top: 15px;text-align: center;">
                                    <b>  @item.GRP_NAME</b>
                                </div>

                            </div>

                        </div>
                    </div>
                </div>
            }
        }
        else
        {
            <div class="col-xl-3 col-md-4 col-6  col-grid-box">
                <p>No Record Found</p>
            </div>
        }
    </div>
</div>

<div class="pagination-box">
    <div class="row">
        <div class="col-sm-6">
            <nav aria-label="Page navigation example">
                <!-- pager -->
                @if (Model.Pager.EndPage > 1)
                {
                    <ul class="pagination">
                        @if (Model.Pager.CurrentPage > 1)
                        {
                            <li class="page-item">
                                <a class="page-link" href='~/Category/Index?catId= @Model.Pager.catId '>First</a>
                            </li>
                            <li class="page-item">
                                <a class="page-link" href='~/Category/Index?catId= @Model.Pager.catId &page=@(Model.Pager.CurrentPage - 1) &record1=@(Model.Pager.PageSize)'>Previous</a>
                            </li>
                        }

                        @for (var page = Model.Pager.StartPage; page <= Model.Pager.EndPage; page++)
                        {
                            <li class="@(page == Model.Pager.CurrentPage ? "active page-item" : "page-item")">
                                <a class="page-link" href='~/Category/Index?catId= @Model.Pager.catId &page=@page &record1=@(Model.Pager.PageSize)'>@page</a>
                            </li>
                        }

                        @if (Model.Pager.CurrentPage < Model.Pager.TotalPages)
                        {
                            <li class="page-item">

                                <a class="page-link" href='~/Category/Index?catId= @Model.Pager.catId &page=@(Model.Pager.CurrentPage + 1) &record1=@(Model.Pager.PageSize)'>Next</a>
                            </li>
                            <li class="page-item">
                                <a class="page-link" href='~/Category/Index?catId= @Model.Pager.catId &page=@(Model.Pager.TotalPages) &record1=@(Model.Pager.PageSize)'>Last</a>
                            </li>
                        }
                    </ul>
                    @Html.Hidden("CatId", @Model.Pager.catId, new { @id = "hdCatID" })
                }

            </nav>
        </div>
    </div>
</div>
