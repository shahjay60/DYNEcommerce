@model Domain.AttributevaluesDomain

@{
    ViewBag.Title = "Edit";
    Layout = "~/Areas/Admin/Views/Shared/_LayoutPage.cshtml";
}

<div class="page-body">

    <!-- Container-fluid starts-->
    <div class="container-fluid">
        <div class="page-header">
            <div class="row">
                <div class="col-lg-6">
                    <div class="page-header-left">
                        <h3>
                            Update Attributevalues
                            <small>Bigdeal Admin panel</small>
                        </h3>
                    </div>
                </div>
                <div class="col-lg-6">
                    <ol class="breadcrumb pull-right">
                        <li class="breadcrumb-item"><a href="@Url.Action("Dashboard", "Login")"><i data-feather="home"></i></a></li>
                        <li class="breadcrumb-item"> Attributevalues </li>
                        <li class="breadcrumb-item active">Update  Attributevalues </li>
                    </ol>
                </div>
            </div>
        </div>
    </div>
    @using (Html.BeginForm("Edit", "AttributeValues", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()
        <div class="container-fluid">
            <div class="row">
                <div class="col-sm-12">

                    <div class="card tab2-card">
                        <div class="card-header">
                            <h5> Update ProductAttribute</h5>
                        </div>
                        <div class="card-body">


                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                            @Html.HiddenFor(model => model.Id)
                            @*@Html.HiddenFor(model => model.ITEM_CD)
                @Html.HiddenFor(model => model.AttributeId)*@
                            <span style="color:red">
                                Each attribute can have a number of values.
                                The variations of a product are created on the basis of these values. For example, if you have an attribute named Size, its values will be similar to S, M, L and XL.
                                If a product can relate to this characteristic, a variation for each of the values can be created.
                            </span>
                            <div class="form-group row">
                                <div class="col-xl-3 col-md-4">
                                    <label for="validationCustom0"><span>*</span>Attribute Name</label>
                                </div>

                                <div class="col-xl-8 col-md-7">
                                    @*ViewBag.CityList is holding all the cities values*@
                                    @Html.DropDownListFor(model => model.AttributeId, Model.Attributes, new { @class = "form-control" })

                                    @Html.ValidationMessageFor(model => model.AttributeId, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <br />
                            <div class="form-group row">
                                <div class="col-xl-3 col-md-4">
                                    <label for="validationCustom0"><span> *</span> AttributeValue </label>
                                </div>
                                <div class="col-xl-8 col-md-7">
                                    @Html.EditorFor(model => model.AttributeValue, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.AttributeValue, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="pull-right">
                                <a href="@Url.Action("Index", "AttributeValues")" class="btn btn-success">
                                    Back to List
                                </a>
                                @*<button type="button" class="btn btn-primary">Save</button>*@
                                <input type="submit" class="btn btn-primary" value="Save" id="btnSubmit" />
                            </div>
                        </div>

                    </div>
                    @if (ViewBag.Success != null)
                    {
                        <div class="alert alert-success" role="alert">
                            Attribute Edit Successfully..!!
                        </div>
                    }
                </div>
            </div>
        </div>
    }
</div>
